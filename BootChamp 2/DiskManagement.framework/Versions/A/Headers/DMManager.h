//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import <Foundation/Foundation.h>
#import <DiskArbitration/DiskArbitration.h>

@interface DMManager : NSObject
{
    id _instPriv;
}

+ (id)sharedManagerForThread;
+ (id)sharedManager;
+ (BOOL)systemResourcesSufficient;
+ (void)initialize;
- (void)finalize;
- (void)dealloc;
- (void)done;
- (int)setUserID:(id)arg1 groupID:(id)arg2;
- (void)setLanguage:(id)arg1;
- (id)delegate;
- (void)setDelegate:(id)arg1;
- (DASessionRef)defaultDASession;
- (void)setDefaultDASession:(DASessionRef)arg1;
- (id)init;
- (DASessionRef)obtainedClientDASession:(DADiskRef)arg1;
- (void)getSessionUUID:(char *)arg1 f2tPort:(unsigned int *)arg2 t2fPort:(unsigned int *)arg3 clientDefaultDASession:(DASessionRef)arg4;
- (void)stopInstanceAsNeeded;
- (BOOL)clientConforms:(id)arg1 error:(int *)arg2;
- (BOOL)checkClientDelegate;
- (void)setClientDelegate:(id)arg1;
- (int)unmountEFISystemPartition:(DADiskRef)arg1 options:(id)arg2;
- (int)mountEFISystemPartition:(DADiskRef)arg1 options:(id)arg2 espDisk:(DADiskRef*)arg3 espMountPoint:(id *)arg4;
- (int)renameDisk:(DADiskRef)arg1 toName:(id)arg2 errorDict:(id *)arg3;
- (int)renameDisk:(DADiskRef)arg1 toName:(id)arg2;
- (BOOL)mountDisk:(DADiskRef)arg1 entireDisk:(BOOL)arg2 atPath:(id)arg3 readOnly:(BOOL)arg4 otherArguments:(id)arg5 errorDict:(id *)arg6;
- (BOOL)mountDisk:(DADiskRef)arg1 entireDisk:(BOOL)arg2 atPath:(id)arg3 readOnly:(BOOL)arg4 otherArguments:(id)arg5;
- (BOOL)ejectDisk:(DADiskRef)arg1 errorDict:(id *)arg2;
- (BOOL)ejectDisk:(DADiskRef)arg1;
- (BOOL)unmountDisk:(DADiskRef)arg1 entireDisk:(BOOL)arg2 force:(BOOL)arg3 errorDict:(id *)arg4;
- (BOOL)unmountVolumePath:(id)arg1 force:(BOOL)arg2 errorDict:(id *)arg3;
- (BOOL)unmountDisk:(DADiskRef)arg1 entireDisk:(BOOL)arg2 force:(BOOL)arg3;
- (BOOL)doMountDisk:(DADiskRef)arg1 atPath:(id)arg2 readOnly:(BOOL)arg3 otherArguments:(id)arg4 errorDict:(id *)arg5;
- (int)findBooterDiskContainingBaseSystemForDisk:(DADiskRef)arg1;
- (int)makeLegacyBootable:(DADiskRef)arg1 partitionDataRuns:(id)arg2 MBRHeaderDataRun:(id)arg3 setActive:(unsigned char)arg4 updateBootIni:(BOOL)arg5 options:(id)arg6;
- (int)recoveryPartitionInfoForVolume:(DADiskRef)arg1 what:(id)arg2 info:(id *)arg3;
- (int)ensureRecoveryPartitionForVolume:(DADiskRef)arg1 macOSXDiskImageFile:(id)arg2 macOSXDiskImageChunkListFile:(id)arg3 diagnosticsDiskImageFile:(id)arg4 diagnosticsDiskImageChunkListFile:(id)arg5 verifyImage:(BOOL)arg6 repairDonor:(BOOL)arg7 diagnosticsMachineBlacklistInhibit:(BOOL)arg8;
- (int)ensureRecoveryPartitionForVolume:(DADiskRef)arg1 macOSXDiskImageFile:(id)arg2 macOSXDiskImageChunkListFile:(id)arg3 diagnosticsDiskImageFile:(id)arg4 diagnosticsDiskImageChunkListFile:(id)arg5 verifyImage:(BOOL)arg6 repairDonor:(BOOL)arg7 bless:(BOOL)arg8;
- (int)ensureRecoveryPartitionForVolume:(DADiskRef)arg1 macOSXDiskImageFile:(id)arg2 macOSXDiskImageChunkListFile:(id)arg3 verifyImage:(BOOL)arg4 repairDonor:(BOOL)arg5 bless:(BOOL)arg6;
- (int)ensureRecoveryPartitionForVolume:(DADiskRef)arg1 macOSXDiskImageFile:(id)arg2 macOSXDiskImageChunkListFile:(id)arg3 verifyImage:(BOOL)arg4 repairDonor:(BOOL)arg5;
- (int)ensureRecoveryPartitionForVolume:(DADiskRef)arg1 macOSXDiskImageFile:(id)arg2 verifyImage:(BOOL)arg3 repairDonor:(BOOL)arg4;
- (int)makeBootable:(DADiskRef)arg1 filesystem:(id)arg2 newDisk:(DADiskRef*)arg3;
- (int)checkAbilityToMakeBootable:(DADiskRef)arg1 onAnyMachine:(BOOL)arg2 atAll:(char *)arg3 yesButDestructively:(char *)arg4;
- (int)checkMacOSXBootability:(DADiskRef)arg1 isBootable:(char *)arg2;
- (int)checkBootabilityOnThisMachine:(DADiskRef)arg1 isBootable:(char *)arg2;
- (int)checkWindowsUEFIBootabilityForOpticalWholeDisk:(DADiskRef)arg1 isWindowsUEFIBootable:(char *)arg2 os:(id *)arg3;
- (int)checkWindowsUEFIBootabilityForNonOpticalPartition:(DADiskRef)arg1 isWindowsUEFIBootable:(char *)arg2 os:(id *)arg3;
- (int)checkLegacyBootabilityForNonOpticalPartition:(DADiskRef)arg1 isLegacyBootable:(char *)arg2 os:(id *)arg3;
- (int)checkLegacyBootabilityForNonOpticalWholeDisk:(DADiskRef)arg1 isLegacyBootable:(char *)arg2 os:(id *)arg3;
- (int)checkLegacyBootabilityForOpticalWholeDisk:(DADiskRef)arg1 isLegacyBootable:(char *)arg2 os:(id *)arg3;
- (int)checkOpticalDiscBootability:(DADiskRef)arg1 isBootable:(char *)arg2;
- (int)getDiskForBootPreference:(DADiskRef*)arg1;
- (int)copyDiskForBootPreference:(DADiskRef*)arg1;
- (int)setWindowsUEFIDiskForNextOnlyBootPreference:(DADiskRef)arg1 withDriveHint:(DADiskRef)arg2;
- (int)setWindowsInstallerUEFIDiskForNextOnlyBootPreference:(DADiskRef)arg1 withDriveHint:(DADiskRef)arg2;
- (int)setWindowsUEFIDiskForBootPreference:(DADiskRef)arg1 withDriveHint:(DADiskRef)arg2;
- (int)setLegacyDiskForNextOnlyBootPreference:(DADiskRef)arg1 withDriveHint:(DADiskRef)arg2;
- (int)setLegacyDiskForBootPreference:(DADiskRef)arg1 withDriveHint:(DADiskRef)arg2;
- (int)setDiskForBootPreference:(DADiskRef)arg1 atFolderLocation:(id)arg2 isOS9:(BOOL)arg3;
- (int)getNetBootPreference:(unsigned int *)arg1 withServer:(id *)arg2 forInterface:(id *)arg3;
- (int)setNextOnlyNetBootPreference:(unsigned int)arg1 withServer:(id)arg2 forInterface:(id)arg3;
- (int)setNetBootPreference:(unsigned int)arg1 withServer:(id)arg2 forInterface:(id)arg3;
- (int)setNVRAM:(id)arg1 forKey:(id)arg2;
- (int)checkUEFIWindowsBootSupport:(char *)arg1;
- (int)checkLegacyBootSupport:(char *)arg1;
- (unsigned int)supportedNetBootProtocols;
- (int)preBootEnvironment;
- (int)checkBootabilityOnThisMachine_actualsimplepartition_:(DADiskRef)arg1 isBootable:(char *)arg2;
- (int)checkAbilityToMakeBootable_actualsimplepartition_:(DADiskRef)arg1 onAnyMachine:(BOOL)arg2 atAll:(char *)arg3 yesButDestructively:(char *)arg4;
- (id)coreStorageStatusSummaryForDisk:(DADiskRef)arg1 orForCSUUID:(id)arg2 error:(int *)arg3;
- (BOOL)isDisallowedCoreStorageOperationsForLogicalVolumeDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)needsRebootToBeginCoreStorageConversion:(DADiskRef)arg1 checkRoot:(BOOL)arg2 error:(int *)arg3;
- (BOOL)isUnrecognizedCoreStoragePhysicalVolumeDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isCoreStoragePhysicalVolumeDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)optimizationProgressForCoreStorageDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)optimizationProgressForLogicalVolumeDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)optimizationProgressForLogicalVolume:(id)arg1 error:(int *)arg2;
- (id)conversionProgressForCoreStorageDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)conversionProgressForLogicalVolumeDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)conversionProgressForLogicalVolume:(id)arg1 error:(int *)arg2;
- (id)conversionStateForLogicalVolumeDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isCoreStorageCompositeLogicalVolumeDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isCoreStorageEncryptedLogicalVolumeDisk:(DADiskRef)arg1 locked:(char *)arg2 type:(id *)arg3 error:(int *)arg4;
- (BOOL)isCoreStorageLogicalVolumeDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)DMAppleRAIDMemberRebuildProgress:(id)arg1 error:(int *)arg2;
- (id)DMAppleRAIDParentUUIDForUUID:(id)arg1 error:(int *)arg2;
- (BOOL)isAppleRAIDSpareDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isAppleRAIDMemberDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isAppleRAIDSetDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isAppleRAIDDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isAppleRAIDUUID:(id)arg1 error:(int *)arg2;
- (DADiskRef)DMAppleRAIDUUIDLookup:(id)arg1;
- (id)DMAppleRAIDUUIDForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)physicalDisksForDisk:(DADiskRef)arg1 storageSystemName:(id *)arg2 error:(int *)arg3;
- (BOOL)isMountableVolume:(DADiskRef)arg1 error:(int *)arg2;
- (id)ioContentOfDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)ioContentToHuman:(id)arg1 error:(int *)arg2;
- (id)ioContentToHuman:(id)arg1 context:(id)arg2 error:(int *)arg3;
- (BOOL)canRepairPermissions:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)permissionsEnabledForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (DADiskRef)copyBooterDiskForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isRecoveryBooterPartitionDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isBooterPartitionDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isLiveResizablePartitionForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isOpenDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isLeafDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isJournaledDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isVirtualWholeDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isEjectableDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)ejectabilityOfDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isRemovableDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isInternalDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isNetworkDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isUserDataVolume:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isSystemImage:(DADiskRef)arg1 error:(int *)arg2;
- (int)partitionMapSchemeForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)wholeDiskSupportsLowLevelFormat:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)wholeDiskHasOS9Drivers:(DADiskRef)arg1 error:(int *)arg2;
- (id)smartStatusForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)busSpecificKeysForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isSolidStateDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)protocolForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isXsanFilesystemDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isXsanComponentDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isIPodDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)mediaTypeForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isAppleDiskImage:(DADiskRef)arg1 error:(int *)arg2;
- (id)bayNameForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isErasableOpticalMedia:(DADiskRef)arg1 error:(int *)arg2;
- (id)opticalMediaTypeForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)opticalDeviceTypeForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isDVD:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isCD:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isOpticalDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)filesystemForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isWritableVolume:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isWritableMedia:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isWritableDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)blockSizeForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)totalSizeForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)ioKitSizeForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)volumeAllocationBlockSizeForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)volumeTotalSizeForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)volumeFreeSpaceForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (DADiskRef)copyDiskForVolumeName:(id)arg1 error:(int *)arg2;
- (id)volumeNameForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)mountPointForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isMountedVolume:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isOnSameWholeDiskAsRoot:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isRootVolume:(DADiskRef)arg1 error:(int *)arg2;
- (id)deviceTreePathForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)rawDeviceNodeForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)deviceNodeForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)partitionIdentifierForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)wholeDiskIdentifierForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)diskIdentifierForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)mediaNameForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)deviceNameForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)diskUUIDForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)volumeUUIDForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)uuidForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isWholeDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)descriptionForDisk:(DADiskRef)arg1;
- (DADiskRef)copyDiskForPartitionIdentifier:(id)arg1 forWholeDisk:(DADiskRef)arg2 error:(int *)arg3;
- (DADiskRef)copyDiskForVolumeUUID:(id)arg1 error:(int *)arg2;
- (DADiskRef)copyDiskForDiskUUID:(id)arg1 error:(int *)arg2;
- (BOOL)mapLayoutMatching:(DADiskRef)arg1 matchScheme:(int)arg2 matchPartitions:(id)arg3 error:(int *)arg4;
- (BOOL)isLastDiskInMap:(DADiskRef)arg1 error:(int *)arg2;
- (BOOL)isFirstDiskInMap:(DADiskRef)arg1 error:(int *)arg2;
- (DADiskRef)copyPreviousDiskInMapForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (DADiskRef)copyNextDiskInMapForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (DADiskRef)copyLastDiskInMapForWholeDisk:(DADiskRef)arg1 error:(int *)arg2;
- (DADiskRef)copyFirstDiskInMapForWholeDisk:(DADiskRef)arg1 error:(int *)arg2;
- (DADiskRef)copyWholeDiskForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (DADiskRef)wholeDiskForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)directChildrenForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)childrenForDisk:(DADiskRef)arg1 error:(int *)arg2;
- (id)topLevelDisks;
- (id)disks;
- (DADiskRef)rootDisk:(int *)arg1;
- (DADiskRef)copyRootDisk:(int *)arg1;
- (DADiskRef)copyDiskForMountPoint:(id)arg1 error:(int *)arg2;
- (DADiskRef)diskForPath:(id)arg1 error:(int *)arg2;
- (DADiskRef)copyDiskForPath:(id)arg1 error:(int *)arg2;
- (DADiskRef)copyDiskForArgumentName:(id)arg1 timeout:(double)arg2 complete:(char *)arg3;
- (int)makeVolumeCaseSensitive:(DADiskRef)arg1;
- (int)volumeInfoForUnmountedDisk:(DADiskRef)arg1 info:(id *)arg2;
- (int)modifyOwnershipForDisk:(DADiskRef)arg1 enableOwnership:(BOOL)arg2;
- (int)modifyJournalOnDisk:(DADiskRef)arg1 enableJournaling:(BOOL)arg2 force:(BOOL)arg3;
- (int)moveJournalInternal:(DADiskRef)arg1;
- (int)upgradeDisk:(DADiskRef)arg1 enablePermissions:(BOOL)arg2;
- (int)partitionMapTypeForDisk:(id)arg1;
- (id)directChildrenOfDisk:(id)arg1;
- (id)rootDisk;
- (id)diskWithIdentifier:(id)arg1;
- (void)waitForAppearanceOfDiskNodes;

@end

